/// <reference types="react" />
export declare class FormControl {
  el: any;
  type: 'TEXT' | 'NUMBER' | 'DECIMAL' | 'DROPDOWN' | 'MULTI_SELECT' | 'RADIO' | 'CHECKBOX' | 'DATE' | 'PARAGRAPH' | 'EMAIL' | 'URL' | 'TEL' | 'TIME' | 'RELATIONSHIP';
  name: any;
  label: any;
  required: boolean;
  hint: string;
  placeholder: string;
  choices: any;
  /**
   * Additional props can be passed here for crayons components. Useful when rendering crayons components implicitly via form-control.
   */
  fieldProps?: any;
  /**
   * Contains values for crayons components. Useful when rendering crayons components implicitly via form-control.
   * Not required when using controls via slots.
   */
  controlProps?: any;
  touched: boolean;
  error: string;
  private slotElement;
  private crayonsControlRef;
  hasSlot: boolean;
  renderControl(): JSX.Element;
  componentWillLoad(): void;
  /**
   * Set Focus on the child
   */
  setFocus(): Promise<void>;
  private handleSlotChange;
  render(): JSX.Element;
}
